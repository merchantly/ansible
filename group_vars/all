rbenv:
  env: user
  version: v1.0.0
  default_ruby: 2.4.4
  rubies:
    - version: 2.4.4

rbenv_users:
  - "{{ app_user }}"

# elasticsearch 9200 тут не светим, потому что
# к нему открывается доступ с IP сервера
iptables_allowed_tcp_ports: [22, 25, 80, 443, 4096, 10050]

iptables_raw_rules:
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,PSH,URG -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN FIN,SYN -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags SYN,RST SYN,RST -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,RST FIN,RST -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags FIN,ACK FIN -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags PSH,ACK PSH -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -p tcp -m tcp --tcp-flags ACK,URG URG -j REJECT --reject-with icmp-port-unreachable"
  - "-A INPUT -s 136.243.75.105  -j ACCEPT -m comment --comment srv-1.kiiiosk.ru"
  - "-A INPUT -s 136.243.75.79 -j ACCEPT -m comment --comment db1.kiiiosk.ru"
  - "-A INPUT -s 136.243.75.107 -j ACCEPT -m comment --comment db2.kiiiosk.ru"
  - "-A INPUT -s 94.232.57.6 -j ACCEPT -m comment --comment office.brandymint.ru"

logrotate_scripts:
  - name: Web applications
    path: "/home/*/*/shared/log/*.log"
    options:
      - weekly
      - size 25M
      - missingok
      - compress
      - delaycompress
      - copytruncate
      - rotate 20
  - name: nginx
    path: /var/log/nginx/*.log
    options:
      - daily
      - missingok
      - rotate 14
      - compress
      - delaycompress
      - notifempty
      - create 0660 www-data www-data
      - sharedscripts
    scripts:
      prerotate: 'if [ -d /etc/logrotate.d/httpd-prerotate ]; then run-parts /etc/logrotate.d/httpd-prerotate; fi'
      postrotate: 'invoke-rc.d nginx rotate >/dev/null 2>&1'

locales:
  - ru_RU.UTF-8
  - en_US.UTF-8

disable_swap: true

app_db_user: "{{ app_user }}"
app_root: "/home/{{ app_user }}/{{ app_site_name }}/current/app"
app_shared_path: "/home/{{ app_user }}/{{ app_site_name }}/shared"
app_ssl_certificate: '/etc/ssl/{{ app_site_name }}.crt'
app_ssl_certificate_key: '/etc/ssl/{{ app_site_name }}.key'

cron_vars:
  - name: 'MAILTO'
    value: "servers@kiiiosk.ru"
    user: root

timezone_enabled: yes
timezone_timezone: Europe/Moscow

__smartd_email: "servers@kiiiosk.ru"
zabbix_common_config_minor_version: '3.4'
zabbix_agent_config_server: '94.232.57.6,136.243.75.79,127.0.0.1,148.251.195.87'
zabbix_agent_config_server_active: '94.232.57.6'
zabbix_agent_config_include_confs: ["process", "sockstat", "diskstats", "meminfo", "psql", "nginx", "memcached", "postfix", "redis", "sidekiq", "smartctl", "uhdd"]

zabbix_agent_pkg_state: latest
zabbix_common_apt_repository: "deb http://repo.zabbix.com/zabbix/{{ zabbix_common_config_minor_version }}/{{ ansible_distribution|lower }} xenial main contrib non-free"


postgresql_version: 10
postgresql_encoding: 'UTF-8'
postgresql_locale: 'en_US.UTF-8'
postgresql_ctype: 'en_US.UTF-8'

postgresql_admin_user: "postgres"
postgresql_default_auth_method: "trust"

postgresql_service_enabled: true # should the service be enabled, default is true

postgresql_listen_addresses: '127.0.0.1'

ssh_authorized_keys:
  root:
    - danil.pub
    - kserx.pub
  wwwkiiiosk:
    - danil.pub
    - kserx.pub

nvm_env: user
nvm_default_node_version: v8.9.4
nvm_node_versions:
  - v8.9.4

# Приходится переопределять,потому что по-умолчанию ~/.nvm и тильда воспринимается буквально
nvm_root: "$HOME/.nvm"
nvm_users:
  - "{{ app_user }}"

nginx_sites:
  default:
    - 'listen 443 http2 ssl'
    - 'server_name {{ app_site_name }} www.{{ app_site_name }}'
    - 'root {{ app_root }}'
    - 'access_log /var/log/nginx/{{ app_site_name }}.access.log combined'
    - 'error_log /var/log/nginx/{{ app_site_name }}.error.log'
    #- 'ssl_certificate {{ app_ssl_certificate }}'
    #- 'ssl_certificate_key {{ app_ssl_certificate_key }}'
    - 'location = /index.html { rewrite ^ http://{{ app_site_name }}/ permanent; }'

nginx_configs:
  proxy:
    - proxy_set_header Host $http_host
    - proxy_set_header X-Real-IP  $remote_addr
    - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
    - proxy_set_header X-Forwarded-Proto $scheme

  real_ip:
    - real_ip_header    X-Forwarded-For
    - real_ip_recursive on

  gzip:
    - gzip on
    - gzip_disable msie6
  connection_upgrade:
    - map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      '';
     }
  fastcgi:
    - 'fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=wholepage:5m'

backup_models:
  app_db:
    title: 'Backup {{ app_db_name }} database'
    class: PostgreSQL
    db:
      name: "{{ app_db_name }}"
      username: "{{ app_db_user }}"
      password: "{{ app_db_password }}"
      additional_options: '["--defaults-extra-file=~/.mylogin.cnf", "--quick", "--single-transaction"]'

redis_bind_interface: 127.0.0.1

